/**
 * UTILITAIRES DE TEST DE VOIX
 * ===========================
 * Fonctions pour tester diff√©rentes configurations de voix
 */

import { speakWithFeminineVoice, selectBestFeminineVoice } from './feminineSpeechUtils';

/**
 * Teste plusieurs configurations de voix avec des phrases d'exemple
 */
export const runVoiceDemo = async () => {
  const testSentences = [
    "Bonjour ! Je suis votre assistant pour apprendre le shimaor√© et le kibouchi.",
    "Cette voix vous convient-elle pour l'apprentissage ?",
    "Essayons maintenant avec un mot en shimaor√© : wami nisnguadza",
    "Et en kibouchi : zahou za msoma"
  ];

  console.log('üéôÔ∏è === D√âMONSTRATION DES VOIX ===');
  
  try {
    // Test 1: Voix f√©minine √©nergique (recommand√©e)
    console.log('\nüéØ Test 1: Voix f√©minine √©nergique (RECOMMAND√âE)');
    for (let i = 0; i < testSentences.length; i++) {
      console.log(`üó£Ô∏è Phrase ${i + 1}: "${testSentences[i]}"`);
      await speakWithEnhancedVoice(
        testSentences[i], 
        i < 2 ? 'fr' : (i === 2 ? 'shimaore' : 'kibouchi'), 
        'feminine', 
        'energetic'
      );
      await new Promise(resolve => setTimeout(resolve, 2000)); // Pause entre les phrases
    }
    
    await new Promise(resolve => setTimeout(resolve, 3000)); // Pause plus longue
    
    // Test 2: Voix masculine conteur
    console.log('\nüìö Test 2: Voix masculine conteur (ALTERNATIVE)');
    await speakWithEnhancedVoice(
      "Voici une voix plus douce, parfaite pour raconter des histoires en shimaor√© et kibouchi.", 
      'fr', 
      'masculine', 
      'storyteller'
    );
    
    await new Promise(resolve => setTimeout(resolve, 4000));
    
    // Test 3: Voix masculine calme
    console.log('\nüòå Test 3: Voix masculine calme (RELAXANTE)');
    await speakWithEnhancedVoice(
      "Cette voix est plus calme et pos√©e, id√©ale pour les moments de concentration.", 
      'fr', 
      'masculine', 
      'calm'
    );
    
    await new Promise(resolve => setTimeout(resolve, 4000));
    
    // Test final avec question
    console.log('\n‚ùì Test final: Question utilisateur');
    await speakWithEnhancedVoice(
      "Quelle voix pr√©f√©rez-vous pour l'apprentissage du shimaor√© et du kibouchi ?", 
      'fr', 
      'masculine', 
      'energetic'
    );
    
    console.log('‚úÖ D√©monstration termin√©e !');
    
  } catch (error) {
    console.log('‚ùå Erreur lors de la d√©monstration:', error);
  }
};

/**
 * Affiche les informations sur les voix disponibles
 */
export const showAvailableVoices = async () => {
  try {
    console.log('üîç Recherche des voix disponibles...');
    const voices = await getAvailableVoices();
    
    console.log(`\nüìä ${voices.length} voix fran√ßaises trouv√©es:`);
    voices.forEach((voice, index) => {
      console.log(`${index + 1}. ${voice.name} (${voice.language}) - ${voice.gender || 'Genre inconnu'}`);
    });
    
    // Identifier les meilleures voix masculines
    const masculineVoices = voices.filter(voice =>
      voice.gender === 'male' || 
      voice.name.toLowerCase().includes('thomas') ||
      voice.name.toLowerCase().includes('daniel') ||
      voice.name.toLowerCase().includes('male')
    );
    
    if (masculineVoices.length > 0) {
      console.log(`\nüé≠ ${masculineVoices.length} voix masculines recommand√©es:`);
      masculineVoices.forEach((voice, index) => {
        console.log(`‚≠ê ${index + 1}. ${voice.name} - ${voice.language}`);
      });
    } else {
      console.log('\n‚ö†Ô∏è Aucune voix masculine sp√©cifique d√©tect√©e, utilisation des param√®tres de pitch');
    }
    
  } catch (error) {
    console.log('‚ùå Erreur lors de la r√©cup√©ration des voix:', error);
  }
};

/**
 * Test rapide d'une phrase avec la voix masculine optimis√©e
 */
export const quickVoiceTest = async (text: string = "Test de la voix masculine pour Mayotte") => {
  console.log(`üß™ Test rapide: "${text}"`);
  
  try {
    await speakWithEnhancedVoice(text, 'fr', 'masculine', 'energetic');
    console.log('‚úÖ Test rapide termin√©');
  } catch (error) {
    console.log('‚ùå Erreur lors du test rapide:', error);
  }
};

/**
 * Teste sp√©cifiquement les corrections phon√©tiques avec la nouvelle voix
 */
export const testPhoneticCorrections = async () => {
  console.log('üîß Test des corrections phon√©tiques avec voix masculine...');
  
  const testWords = [
    { text: "mtsounga", language: 'shimaore' as const, meaning: "√©leveur" },
    { text: "ampitsounga", language: 'kibouchi' as const, meaning: "√©leveur" },
    { text: "wami nisnguadza", language: 'shimaore' as const, meaning: "je joue" },
    { text: "zahou za msoma", language: 'kibouchi' as const, meaning: "je joue" }
  ];
  
  for (const word of testWords) {
    console.log(`üó£Ô∏è Test: "${word.text}" (${word.language}) = ${word.meaning}`);
    await speakWithEnhancedVoice(word.text, word.language, 'masculine', 'energetic');
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  console.log('‚úÖ Test des corrections phon√©tiques termin√©');
};

// Fonction de commodit√© pour les d√©veloppeurs
export const devTestVoices = () => {
  console.log('üõ†Ô∏è Mode d√©veloppeur: Tests de voix disponibles');
  console.log('Commandes disponibles:');
  console.log('- runVoiceDemo() : D√©monstration compl√®te');
  console.log('- showAvailableVoices() : Liste des voix syst√®me');
  console.log('- quickVoiceTest("votre texte") : Test rapide');
  console.log('- testPhoneticCorrections() : Test corrections phon√©tiques');
};