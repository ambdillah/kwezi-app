#!/usr/bin/env python3
"""
Script pour appliquer les corrections sp√©cifiques selon le tableau fourni par l'utilisateur
Corrections des traductions en shimaor√© et kibouchi
"""

import os
from pymongo import MongoClient
from datetime import datetime

# MongoDB connection
MONGO_URL = os.getenv("MONGO_URL", "mongodb://localhost:27017/mayotte_app")
client = MongoClient(MONGO_URL)
db = client.mayotte_app
words_collection = db.words

def apply_corrections():
    """Appliquer toutes les corrections selon le tableau fourni"""
    
    print("üîÑ Application des corrections selon le tableau fourni...")
    
    # Dictionnaire des corrections √† appliquer
    corrections = {
        # Verbes - corrections
        "vivre": {"shimaore": "ouyinchi", "kibouchi": "mikou√©nchi"},
        "attendre": {"shimaore": "oulindra", "kibouchi": "mandgni"},
        "faire pipi": {"shimaore": "ougna kojo", "kibouchi": "mamani"},
        "embrasser": {"shimaore": "ounouka", "kibouchi": "mihoroukou"},
        "avertir": {"shimaore": "outahadaricha", "kibouchi": "mampaheyi"},
        "se laver le derri√®re": {"shimaore": "outsamba", "kibouchi": "mambouyi"},
        "se laver": {"shimaore": "ouhowa", "kibouchi": "misseki"},
        "r√©chauffer": {"shimaore": "ouhelesedza", "kibouchi": "mamana"},
        "jouer": {"shimaore": "ounguadza", "kibouchi": "msoma"},
        "donner": {"shimaore": "ouva", "kibouchi": "magnamiya"},
        "entrer": {"shimaore": "ounguiya", "kibouchi": "mihidiri"},
        
        # Expressions - corrections
        "au milieu": {"shimaore": "hari", "kibouchi": "angnivou"},
        "j'ai soif": {"shimaore": "nissi ona niyora", "kibouchi": "zahou tindranou"},
        "je prends √ßa": {"shimaore": "nissi renga ini", "kibouchi": "zahou bou angala tihi"},
        "moins cher s'il vous pla√Æt": {"shimaore": "nissi miya ouchoukidze", "kibouchi": "za mangataka koupoundouza kima"},
        "bonne nuit": {"shimaore": "oukou wa hairi", "kibouchi": "haligni tsara"},
        "au revoir": {"shimaore": "kwaheri", "kibouchi": "maeva"},
        
        # Adjectifs - corrections
        "col√®re": {"shimaore": "hadabou", "kibouchi": "meloukou"},
        "court": {"shimaore": "coutri", "kibouchi": "fohiki"},
        "dr√¥le": {"shimaore": "outs√©sa", "kibouchi": "mampimohi"},
        "faux": {"shimaore": "trambo", "kibouchi": "vandi"},
        "long": {"shimaore": "drile", "kibouchi": "habou"},
        "sale": {"shimaore": "trotro", "kibouchi": "maloutou"},
        
        # Famille - corrections
        "tante": {"shimaore": "mama titi/bol√©", "kibouchi": "nindri heli/b√©"},
        "petite s≈ìur": {"shimaore": "moinagna mtroumama", "kibouchi": "zandri viavi"},
        "petit fr√®re": {"shimaore": "moinagna mtroubaba", "kibouchi": "zandri lalahi"},
        "nounou": {"shimaore": "mlezi", "kibouchi": "mlezi"},
        
        # Couleurs - corrections
        "bleu": {"shimaore": "bil√©", "kibouchi": "mayitsou bil√©"},
        "gris": {"shimaore": "djifou", "kibouchi": "dzofou"},
        
        # Animaux - corrections
        "pigeon": {"shimaore": "ndiwa", "kibouchi": "ndiwa"},
        "fourmis": {"shimaore": "tsoussou", "kibouchi": "vitsiki"},
        "mille pattes": {"shimaore": "mjongo", "kibouchi": "ancoudafiri"},
        "oursin": {"shimaore": "gadzassi", "kibouchi": "vouli vayi"},
        "hu√Ætre": {"shimaore": "gadzassi", "kibouchi": "sadza"},
        
        # Corps - corrections
        "arri√®re du cr√¢ne": {"shimaore": "komoi", "kibouchi": "kiroika"},
        
        # Maison - corrections
        "marmite": {"shimaore": "gnoumsou", "kibouchi": "vilangni"},
        "torche": {"shimaore": "pong√©", "kibouchi": "pongi"},  # Correction en rouge
    }
    
    corrections_appliquees = 0
    mots_non_trouves = []
    
    # Appliquer chaque correction
    for mot_francais, nouvelles_traductions in corrections.items():
        # Chercher le mot dans la base de donn√©es (insensible √† la casse)
        query = {"french": {"$regex": f"^{mot_francais}$", "$options": "i"}}
        mots_trouves = list(words_collection.find(query))
        
        if mots_trouves:
            for mot in mots_trouves:
                # Mettre √† jour les traductions
                update_data = {
                    "shimaore": nouvelles_traductions["shimaore"],
                    "kibouchi": nouvelles_traductions["kibouchi"],
                    "updated_at": datetime.utcnow()
                }
                
                result = words_collection.update_one(
                    {"_id": mot["_id"]},
                    {"$set": update_data}
                )
                
                if result.modified_count > 0:
                    corrections_appliquees += 1
                    print(f"‚úÖ Corrig√© '{mot_francais}': {nouvelles_traductions['shimaore']} / {nouvelles_traductions['kibouchi']}")
                else:
                    print(f"‚ö†Ô∏è Aucune modification pour '{mot_francais}' (d√©j√† √† jour)")
        else:
            mots_non_trouves.append(mot_francais)
            print(f"‚ùå Mot non trouv√© : '{mot_francais}'")
    
    # R√©sum√© des corrections
    print(f"\nüìä R√âSUM√â DES CORRECTIONS :")
    print(f"   ‚úÖ Corrections appliqu√©es : {corrections_appliquees}")
    print(f"   ‚ùå Mots non trouv√©s : {len(mots_non_trouves)}")
    
    if mots_non_trouves:
        print(f"   üìã Mots non trouv√©s : {', '.join(mots_non_trouves)}")
    
    # V√©rification finale
    total_words = words_collection.count_documents({})
    print(f"   üìà Total des mots dans la base : {total_words}")
    
    return corrections_appliquees

def verify_corrections():
    """V√©rifier quelques-unes des corrections appliqu√©es"""
    print("\nüîç V√©rification de quelques corrections...")
    
    test_words = ["torche", "bleu", "j'ai soif", "marmite", "fourmis"]
    
    for word in test_words:
        result = words_collection.find_one({"french": {"$regex": f"^{word}$", "$options": "i"}})
        if result:
            print(f"‚úÖ {word}: {result['shimaore']} / {result['kibouchi']}")
        else:
            print(f"‚ùå {word}: Non trouv√©")

if __name__ == "__main__":
    print("üîß Application des corrections selon le tableau fourni...")
    count = apply_corrections()
    verify_corrections()
    print(f"\n‚úÖ Termin√© ! {count} corrections appliqu√©es avec succ√®s.")