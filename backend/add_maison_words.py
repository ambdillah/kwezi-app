#!/usr/bin/env python3
"""
Ajout de 3 nouveaux mots dans la cat√©gorie "maison" avec leurs audios
Date: 14 octobre 2025
Cat√©gorie: maison
"""

from pymongo import MongoClient
from dotenv import load_dotenv
import os
from datetime import datetime

load_dotenv()

mongo_url = os.getenv('MONGO_URL')
client = MongoClient(mongo_url)
db = client[os.getenv('DB_NAME', 'mayotte_app')]

print("=" * 80)
print("AJOUT DE 3 NOUVEAUX MOTS CAT√âGORIE 'MAISON'")
print("=" * 80)
print(f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
print()

# D√©finir les 3 nouveaux mots avec TOUTES leurs m√©tadonn√©es
nouveaux_mots = [
    {
        'french': 'savon',
        'shimaore': 'sabouni',
        'kibouchi': 'sabouni',
        'shimoare_audio_filename': 'Sabouni.m4a',  # Ancien format
        'audio_filename_shimaore': 'Sabouni.m4a',  # Nouveau format
        'audio_filename_kibouchi': 'Sabouni.m4a',  # M√äME fichier (traduction identique)
        'category': 'maison',
        'difficulty': 1,
        'audio_category': 'maison',
        'dual_audio_system': True,
        'has_shimaore_audio': True,
        'has_kibouchi_audio': True,
        'created_at': datetime.utcnow(),
        'updated_at': datetime.utcnow(),
        'audio_source': 'authentic',
        'audio_updated_at': datetime.utcnow(),
        'note': 'Traduction identique en shimaor√© et kibouchi'
    },
    {
        'french': 'brosse √† dent',
        'shimaore': 'msouaki',
        'kibouchi': 'msouaki',
        'shimoare_audio_filename': 'Msouaki.m4a',
        'audio_filename_shimaore': 'Msouaki.m4a',
        'audio_filename_kibouchi': 'Msouaki.m4a',  # M√äME fichier (traduction identique)
        'category': 'maison',
        'difficulty': 1,
        'audio_category': 'maison',
        'dual_audio_system': True,
        'has_shimaore_audio': True,
        'has_kibouchi_audio': True,
        'created_at': datetime.utcnow(),
        'updated_at': datetime.utcnow(),
        'audio_source': 'authentic',
        'audio_updated_at': datetime.utcnow(),
        'note': 'Traduction identique en shimaor√© et kibouchi'
    },
    {
        'french': 'tapis',
        'shimaore': 'djavi',
        'kibouchi': 'tsihi',
        'shimoare_audio_filename': 'Djavi.m4a',
        'audio_filename_shimaore': 'Djavi.m4a',
        'audio_filename_kibouchi': 'Tsihi.m4a',  # Fichier DIFF√âRENT
        'category': 'maison',
        'difficulty': 1,
        'audio_category': 'maison',
        'dual_audio_system': True,
        'has_shimaore_audio': True,
        'has_kibouchi_audio': True,
        'created_at': datetime.utcnow(),
        'updated_at': datetime.utcnow(),
        'audio_source': 'authentic',
        'audio_updated_at': datetime.utcnow(),
        'note': 'Traductions diff√©rentes en shimaor√© et kibouchi'
    }
]

# V√©rifier l'√©tat initial
count_before = db['words'].count_documents({'category': 'maison'})
print(f"üìä Mots 'maison' avant ajout: {count_before}")
print()

# Ajouter chaque mot avec v√©rification
successful_adds = 0
failed_adds = 0
already_exists = 0

for mot in nouveaux_mots:
    print(f"{'='*80}")
    print(f"Traitement: {mot['french']}")
    print(f"{'='*80}")
    
    # V√©rifier si existe d√©j√†
    existing = db['words'].find_one({
        'french': mot['french'],
        'category': 'maison'
    })
    
    if existing:
        print(f"‚ö†Ô∏è  Mot d√©j√† existant:")
        print(f"   Shimaor√©: {existing.get('shimaore')}")
        print(f"   Kibouchi: {existing.get('kibouchi')}")
        already_exists += 1
        continue
    
    # V√©rifier que les fichiers audio existent physiquement
    audio_dir = '/app/frontend/assets/audio/maison'
    shimaore_file = os.path.join(audio_dir, mot['audio_filename_shimaore'])
    kibouchi_file = os.path.join(audio_dir, mot['audio_filename_kibouchi'])
    
    shimaore_exists = os.path.exists(shimaore_file)
    kibouchi_exists = os.path.exists(kibouchi_file)
    
    print(f"V√©rification des fichiers audio:")
    print(f"   Shimaor√© ({mot['audio_filename_shimaore']}): {'‚úÖ' if shimaore_exists else '‚ùå'}")
    print(f"   Kibouchi ({mot['audio_filename_kibouchi']}): {'‚úÖ' if kibouchi_exists else '‚ùå'}")
    
    # Si m√™me fichier, afficher une note
    if mot['audio_filename_shimaore'] == mot['audio_filename_kibouchi']:
        print(f"   üìù Note: M√™me fichier audio pour shimaor√© et kibouchi (traduction identique)")
    
    if not shimaore_exists or not kibouchi_exists:
        print(f"‚ùå ERREUR: Fichiers audio manquants!")
        failed_adds += 1
        continue
    
    # Afficher les traductions
    print(f"\nTraductions:")
    print(f"   Shimaor√©: {mot['shimaore']}")
    print(f"   Kibouchi: {mot['kibouchi']}")
    if mot['shimaore'] == mot['kibouchi']:
        print(f"   üìù Traduction identique dans les deux langues")
    
    # Ins√©rer dans la base
    try:
        result = db['words'].insert_one(mot)
        
        if result.inserted_id:
            print(f"\n‚úÖ AJOUT R√âUSSI:")
            print(f"   ID: {result.inserted_id}")
            print(f"   Fran√ßais: {mot['french']}")
            print(f"   Shimaor√©: {mot['shimaore']}")
            print(f"   Kibouchi: {mot['kibouchi']}")
            print(f"   Audio shimaor√©: {mot['audio_filename_shimaore']}")
            print(f"   Audio kibouchi: {mot['audio_filename_kibouchi']}")
            successful_adds += 1
        else:
            print(f"‚ùå √âchec de l'insertion")
            failed_adds += 1
            
    except Exception as e:
        print(f"‚ùå ERREUR lors de l'insertion: {str(e)}")
        failed_adds += 1
    
    print()

# V√©rifier l'√©tat final
count_after = db['words'].count_documents({'category': 'maison'})

print(f"{'='*80}")
print("R√âSUM√â")
print(f"{'='*80}")
print(f"‚úÖ Ajouts r√©ussis: {successful_adds}")
print(f"‚ö†Ô∏è  D√©j√† existants: {already_exists}")
print(f"‚ùå √âchecs: {failed_adds}")
print(f"üìä Total trait√©: {len(nouveaux_mots)}")
print()
print(f"üìä Mots 'maison' AVANT: {count_before}")
print(f"üìä Mots 'maison' APR√àS: {count_after}")
print(f"üìä Diff√©rence: +{count_after - count_before}")

# V√©rification finale
print(f"\n{'='*80}")
print("V√âRIFICATION FINALE")
print(f"{'='*80}")

all_ok = True
for mot in nouveaux_mots:
    word = db['words'].find_one({
        'french': mot['french'],
        'category': 'maison'
    })
    
    if word:
        print(f"‚úÖ {mot['french']}: {word.get('shimaore')} / {word.get('kibouchi')}")
        # V√©rifier les champs audio
        has_old = word.get('shimoare_audio_filename')
        has_new_sh = word.get('audio_filename_shimaore')
        has_new_ki = word.get('audio_filename_kibouchi')
        if not (has_old and has_new_sh and has_new_ki):
            print(f"   ‚ö†Ô∏è  Champs audio incomplets")
            all_ok = False
    else:
        print(f"‚ùå {mot['french']}: NON TROUV√â")
        all_ok = False

print(f"\n{'='*80}")
if all_ok and successful_adds == len(nouveaux_mots):
    print("üéâ TOUS LES MOTS ONT √âT√â AJOUT√âS AVEC SUCC√àS !")
    print("‚úÖ Total mots 'maison': 42 (39 + 3 nouveaux)")
elif already_exists > 0 and (successful_adds + already_exists) == len(nouveaux_mots):
    print("‚úÖ TOUS LES MOTS SONT PR√âSENTS (certains existaient d√©j√†)")
else:
    print("‚ö†Ô∏è  PROBL√àME: Tous les mots n'ont pas √©t√© ajout√©s correctement")

print(f"{'='*80}")

client.close()
