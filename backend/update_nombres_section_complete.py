#!/usr/bin/env python3
"""
Script pour mettre √† jour la section "nombres" dans la base de donn√©es
avec les nouvelles donn√©es du vocabulaire des nombres.
"""

import os
from dotenv import load_dotenv
from pymongo import MongoClient
import logging

# Charger les variables d'environnement
load_dotenv()

# Configuration des logs
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Nouvelles donn√©es nombres extraites de l'image
NOMBRES_DATA = [
    {"french": "un", "shimaor√©": "moja", "kibouchi": "areki", "number_type": "cardinal", "numeric_value": 1},
    {"french": "deux", "shimaor√©": "mbili", "kibouchi": "Aroyi", "number_type": "cardinal", "numeric_value": 2},
    {"french": "trois", "shimaor√©": "trarou", "kibouchi": "Telou", "number_type": "cardinal", "numeric_value": 3},
    {"french": "quatre", "shimaor√©": "nh√©", "kibouchi": "Efatra", "number_type": "cardinal", "numeric_value": 4},
    {"french": "cinq", "shimaor√©": "tsano", "kibouchi": "Dimi", "number_type": "cardinal", "numeric_value": 5},
    {"french": "six", "shimaor√©": "sita", "kibouchi": "Tchouta", "number_type": "cardinal", "numeric_value": 6},
    {"french": "sept", "shimaor√©": "saba", "kibouchi": "Fitou", "number_type": "cardinal", "numeric_value": 7},
    {"french": "huit", "shimaor√©": "nan√©", "kibouchi": "Valou", "number_type": "cardinal", "numeric_value": 8},
    {"french": "neuf", "shimaor√©": "chendra", "kibouchi": "Civi", "number_type": "cardinal", "numeric_value": 9},
    {"french": "dix", "shimaor√©": "koumi", "kibouchi": "Foulou", "number_type": "cardinal", "numeric_value": 10},
    {"french": "onze", "shimaor√©": "koumi na moja", "kibouchi": "Foulou Areki Ambi", "number_type": "cardinal", "numeric_value": 11},
    {"french": "douze", "shimaor√©": "koumi na mbili", "kibouchi": "Foulou Aroyi Ambi", "number_type": "cardinal", "numeric_value": 12},
    {"french": "treize", "shimaor√©": "koumi na trarou", "kibouchi": "Foulou Telou Ambi", "number_type": "cardinal", "numeric_value": 13},
    {"french": "quatorze", "shimaor√©": "koumi na nh√©", "kibouchi": "Foulou Efatra Ambi", "number_type": "cardinal", "numeric_value": 14},
    {"french": "quinze", "shimaor√©": "koumi na tsano", "kibouchi": "Foulou Dimi Ambi", "number_type": "cardinal", "numeric_value": 15},
    {"french": "seize", "shimaor√©": "koumi na sita", "kibouchi": "Foulou tchouta Ambi", "number_type": "cardinal", "numeric_value": 16},
    {"french": "dix-sept", "shimaor√©": "koumi na saba", "kibouchi": "Foulou fitou Ambi", "number_type": "cardinal", "numeric_value": 17},
    {"french": "dix-huit", "shimaor√©": "koumi na nan√©", "kibouchi": "Foulou valou Ambi", "number_type": "cardinal", "numeric_value": 18},
    {"french": "dix-neuf", "shimaor√©": "koumi na chendra", "kibouchi": "Foulou civi Ambi", "number_type": "cardinal", "numeric_value": 19},
    {"french": "vingt", "shimaor√©": "chirini", "kibouchi": "arompoulou", "number_type": "cardinal", "numeric_value": 20},
    {"french": "trente", "shimaor√©": "thalathini", "kibouchi": "t√©loumpoulou", "number_type": "cardinal", "numeric_value": 30},
    {"french": "quarante", "shimaor√©": "arbahini", "kibouchi": "√©fampoulou", "number_type": "cardinal", "numeric_value": 40},
    {"french": "cinquante", "shimaor√©": "hamssini", "kibouchi": "dimimpoulou", "number_type": "cardinal", "numeric_value": 50},
    {"french": "soixante", "shimaor√©": "sitini", "kibouchi": "tchoutampoulou", "number_type": "cardinal", "numeric_value": 60},
    {"french": "soixante-dix", "shimaor√©": "sabouini", "kibouchi": "fitoumpoulou", "number_type": "cardinal", "numeric_value": 70},
    {"french": "quatre-vingts", "shimaor√©": "thamanini", "kibouchi": "valoumpoulou", "number_type": "cardinal", "numeric_value": 80},
    {"french": "quatre-vingt-dix", "shimaor√©": "toussuini", "kibouchi": "civiampulou", "number_type": "cardinal", "numeric_value": 90},
    {"french": "cent", "shimaor√©": "miya", "kibouchi": "zatou", "number_type": "cardinal", "numeric_value": 100}
]

def connect_to_database():
    """Connexion √† la base de donn√©es MongoDB"""
    try:
        mongo_url = os.getenv('MONGO_URL')
        if not mongo_url:
            raise ValueError("MONGO_URL non trouv√©e dans les variables d'environnement")
        
        client = MongoClient(mongo_url)
        db = client['shimaor√©_app']
        logger.info("Connexion √† la base de donn√©es r√©ussie")
        return db
    except Exception as e:
        logger.error(f"Erreur de connexion √† la base de donn√©es: {e}")
        raise

def update_nombres_section(db):
    """Met √† jour la section nombres dans la base de donn√©es"""
    try:
        collection = db['vocabulary']
        
        # Supprimer l'ancienne section nombres
        result = collection.delete_many({"section": "nombres"})
        logger.info(f"Anciens enregistrements nombres supprim√©s: {result.deleted_count}")
        
        # Pr√©parer les nouveaux documents
        new_documents = []
        for number in NOMBRES_DATA:
            # Cr√©er l'emoji pour les nombres
            emoji = get_number_emoji(number["numeric_value"])
            
            document = {
                "section": "nombres",
                "french": number["french"],
                "shimaor√©": number["shimaor√©"],
                "kibouchi": number["kibouchi"],
                "emoji": emoji,
                "number_type": number["number_type"],
                "numeric_value": number["numeric_value"],
                "audio_shimaor√©": f"audio/{number['french'].lower().replace(' ', '_').replace('-', '_')}_shimaor√©.mp3",
                "audio_kibouchi": f"audio/{number['french'].lower().replace(' ', '_').replace('-', '_')}_kibouchi.mp3"
            }
            new_documents.append(document)
        
        # Ins√©rer les nouveaux documents
        if new_documents:
            result = collection.insert_many(new_documents)
            logger.info(f"Nouveaux nombres ins√©r√©s: {len(result.inserted_ids)}")
            
            # Afficher un r√©sum√©
            logger.info(f"Section nombres mise √† jour avec {len(new_documents)} entr√©es")
            logger.info(f"Plage num√©rique couverte: 1-100 (nombres cardinaux)")
            
        return True
        
    except Exception as e:
        logger.error(f"Erreur lors de la mise √† jour des nombres: {e}")
        return False

def get_number_emoji(numeric_value):
    """Retourne un emoji appropri√© pour le nombre donn√©"""
    # Emojis pour les nombres 1-10
    emoji_map = {
        1: "1Ô∏è‚É£", 2: "2Ô∏è‚É£", 3: "3Ô∏è‚É£", 4: "4Ô∏è‚É£", 5: "5Ô∏è‚É£",
        6: "6Ô∏è‚É£", 7: "7Ô∏è‚É£", 8: "8Ô∏è‚É£", 9: "9Ô∏è‚É£", 10: "üîü"
    }
    
    # Emojis pour les nombres sp√©ciaux
    if numeric_value in emoji_map:
        return emoji_map[numeric_value]
    elif numeric_value == 100:
        return "üíØ"
    elif numeric_value >= 20:
        # Pour les dizaines (20, 30, 40, etc.)
        return "üî¢"
    else:
        # Pour 11-19
        return "üî¢"

def validate_number_data():
    """Valide les donn√©es des nombres avant insertion"""
    logger.info("Validation des donn√©es des nombres...")
    
    # V√©rifier qu'il n'y a pas de doublons
    french_words = [n["french"] for n in NOMBRES_DATA]
    numeric_values = [n["numeric_value"] for n in NOMBRES_DATA]
    
    if len(set(french_words)) != len(french_words):
        logger.error("Doublons d√©tect√©s dans les mots fran√ßais")
        return False
    
    if len(set(numeric_values)) != len(numeric_values):
        logger.error("Doublons d√©tect√©s dans les valeurs num√©riques")
        return False
    
    # V√©rifier que tous les nombres ont les champs requis
    for number in NOMBRES_DATA:
        required_fields = ["french", "shimaor√©", "kibouchi", "numeric_value"]
        for field in required_fields:
            if not number.get(field):
                logger.error(f"Champ manquant '{field}' pour {number.get('french', 'nombre inconnu')}")
                return False
    
    logger.info(f"Validation r√©ussie pour {len(NOMBRES_DATA)} nombres")
    return True

def main():
    """Fonction principale"""
    logger.info("D√©but de la mise √† jour de la section nombres")
    
    try:
        # Validation des donn√©es
        if not validate_number_data():
            logger.error("√âchec de la validation des donn√©es")
            return 1
        
        # Connexion √† la base de donn√©es
        db = connect_to_database()
        
        # Mise √† jour de la section nombres
        success = update_nombres_section(db)
        
        if success:
            logger.info("Mise √† jour de la section nombres termin√©e avec succ√®s")
            logger.info("Les nombres de 1 √† 100 sont maintenant disponibles en shimaor√© et kibouchi")
        else:
            logger.error("√âchec de la mise √† jour de la section nombres")
            
    except Exception as e:
        logger.error(f"Erreur dans le script principal: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())