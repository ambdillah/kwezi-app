#!/usr/bin/env python3
"""
CORRECTION URGENTE - Ajout des champs audio manquants pour les expressions
Les audios shimaor√© ne sont pas accessibles car les champs sont mal nomm√©s
Date: 14 octobre 2025
"""

from pymongo import MongoClient
from dotenv import load_dotenv
import os
from datetime import datetime

load_dotenv()

mongo_url = os.getenv('MONGO_URL')
client = MongoClient(mongo_url)
db = client[os.getenv('DB_NAME', 'mayotte_app')]

print("=" * 80)
print("üö® CORRECTION URGENTE - CHAMPS AUDIO DES EXPRESSIONS")
print("=" * 80)
print(f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
print()

# D√©finir les corrections pour les 7 expressions
corrections = [
    {
        'french': "Aujourd'hui",
        'shimoare_audio_filename': 'L√©o.m4a',  # ANCIEN FORMAT (avec faute d'orthographe)
        'audio_filename_shimaore': 'L√©o.m4a',  # NOUVEAU FORMAT (correct)
        'audio_filename_kibouchi': 'Nyani.m4a'
    },
    {
        'french': 'demain',
        'shimoare_audio_filename': 'M√©sso.m4a',
        'audio_filename_shimaore': 'M√©sso.m4a',
        'audio_filename_kibouchi': 'Amar√©yi.m4a'
    },
    {
        'french': 'apr√®s demain',
        'shimoare_audio_filename': 'Bada m√©sso.m4a',
        'audio_filename_shimaore': 'Bada m√©sso.m4a',
        'audio_filename_kibouchi': 'Hafaka amar√©yi.m4a'
    },
    {
        'french': 'hier',
        'shimoare_audio_filename': 'Jana.m4a',
        'audio_filename_shimaore': 'Jana.m4a',
        'audio_filename_kibouchi': 'Nimoili.m4a'
    },
    {
        'french': 'avant-hier',
        'shimoare_audio_filename': 'Zouzi.m4a',
        'audio_filename_shimaore': 'Zouzi.m4a',
        'audio_filename_kibouchi': 'Nafaka nimoili.m4a'
    },
    {
        'french': "l'ann√©e prochaine",
        'shimoare_audio_filename': 'Moihani.m4a',
        'audio_filename_shimaore': 'Moihani.m4a',
        'audio_filename_kibouchi': 'Moikani.m4a'
    },
    {
        'french': "l'ann√©e derni√®re",
        'shimoare_audio_filename': 'Moiha jana.m4a',
        'audio_filename_shimaore': 'Moiha jana.m4a',
        'audio_filename_kibouchi': 'Moikadjana.m4a'
    }
]

print("‚ö†Ô∏è  PROBL√àME D√âTECT√â:")
print("Les champs audio ont √©t√© mal nomm√©s lors de l'ajout initial")
print("Les audios SHIMAOR√â ne sont PAS accessibles dans l'application")
print()
print("üìù CORRECTIONS √Ä EFFECTUER:")
print("Ajouter les champs manquants avec les bons noms")
print()

successful = 0
failed = 0

for correction in corrections:
    print(f"{'='*80}")
    print(f"Correction: {correction['french']}")
    print(f"{'='*80}")
    
    word = db['words'].find_one({
        'french': correction['french'],
        'category': 'expressions'
    })
    
    if word:
        print(f"‚úÖ Trouv√© en base")
        print(f"   Avant correction:")
        print(f"      - shimoare_audio_filename (ancien format): {word.get('shimoare_audio_filename', 'N/A')}")
        print(f"      - audio_filename_shimaore (nouveau format): {word.get('audio_filename_shimaore', 'N/A')}")
        print(f"      - audio_filename_kibouchi (nouveau format): {word.get('audio_filename_kibouchi', 'N/A')}")
        
        # Pr√©parer les mises √† jour
        update_data = {
            'shimoare_audio_filename': correction['shimoare_audio_filename'],
            'audio_filename_shimaore': correction['audio_filename_shimaore'],
            'audio_filename_kibouchi': correction['audio_filename_kibouchi'],
            'updated_at': datetime.utcnow()
        }
        
        # Effectuer la mise √† jour
        result = db['words'].update_one(
            {'_id': word['_id']},
            {'$set': update_data}
        )
        
        if result.modified_count > 0:
            print(f"\n‚úÖ CORRECTION R√âUSSIE:")
            print(f"   Apr√®s correction:")
            print(f"      - shimoare_audio_filename: {correction['shimoare_audio_filename']} ‚úÖ")
            print(f"      - audio_filename_shimaore: {correction['audio_filename_shimaore']} ‚úÖ")
            print(f"      - audio_filename_kibouchi: {correction['audio_filename_kibouchi']} ‚úÖ")
            successful += 1
        else:
            print(f"\n‚ö†Ô∏è  Aucune modification (d√©j√† correct?)")
            failed += 1
    else:
        print(f"‚ùå NON trouv√©: {correction['french']}")
        failed += 1
    
    print()

print(f"{'='*80}")
print("R√âSUM√â")
print(f"{'='*80}")
print(f"‚úÖ Corrections r√©ussies: {successful}")
print(f"‚ùå √âchecs: {failed}")
print(f"üìä Total trait√©: {len(corrections)}")

# V√©rification finale
print(f"\n{'='*80}")
print("V√âRIFICATION FINALE")
print(f"{'='*80}")

all_ok = True
for correction in corrections:
    word = db['words'].find_one({
        'french': correction['french'],
        'category': 'expressions'
    })
    
    if word:
        has_old = word.get('shimoare_audio_filename') == correction['shimoare_audio_filename']
        has_new_sh = word.get('audio_filename_shimaore') == correction['audio_filename_shimaore']
        has_new_ki = word.get('audio_filename_kibouchi') == correction['audio_filename_kibouchi']
        
        status = "‚úÖ" if (has_old and has_new_sh and has_new_ki) else "‚ùå"
        print(f"{status} {correction['french']}")
        if not (has_old and has_new_sh and has_new_ki):
            print(f"   ‚ö†Ô∏è  Champs manquants d√©tect√©s")
            all_ok = False
    else:
        print(f"‚ùå {correction['french']}: NON TROUV√â")
        all_ok = False

print(f"\n{'='*80}")
if all_ok:
    print("üéâ TOUTES LES CORRECTIONS EFFECTU√âES AVEC SUCC√àS !")
    print("Les audios SHIMAOR√â et KIBOUCHI sont maintenant accessibles")
else:
    print("‚ö†Ô∏è  PROBL√àME: Certaines corrections n'ont pas √©t√© appliqu√©es")

print(f"{'='*80}")

client.close()
