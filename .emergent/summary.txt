<analysis>
The AI engineer's work primarily addressed data integrity, audio integration, and recently, game content issues. Initial efforts focused on correctly implementing a dual-language audio system, which necessitated a significant database restructure to support separate Shimaoré and Kibouchi pronunciation fields. This involved creating and executing backend scripts to modify the database schema, updating the FastAPI  to serve specific language audio files, and adapting the Expo frontend (, ) to consume these new endpoints. Subsequently, the system was extended to nature, nombres, and animaux categories, including downloading and integrating new audio assets. A substantial effort was then dedicated to meticulously verifying and correcting audio-to-word mappings due to user-reported mélanges, employing multiple verification and correction scripts. The current focus is on investigating a lack of variety in the Construire des phrases game.
</analysis>

<product_requirements>
The user requires an educational mobile application for children to learn Shimaoré and Kibouchi. The app should feature engaging games, illustrations, authentic audio pronunciation, an admin panel, offline mode, a badge system, and user data export. Key problem areas have been refining vocabulary, ensuring accurate translations, correct orthography, and proper category management. Implemented features include UI/UX optimization with authentic Mayotte images, a robust database with a 548-word authentic database (542 confirmed words), duplicate elimination, and a protection system. A Construire des phrases game and an audio pronunciation system (Voix Off) with phonetic corrections are in place. Database content is sorted alphabetically (with exceptions), emojis are removed from sensitive words, and attempts were made for a charismatic male voice for pronunciations. Most recently, the user explicitly requested restructuring the database to support separate Shimaoré and Kibouchi audio pronunciations per word/expression to prevent non-original text-to-speech for one language. Following this, the user requested updating pronunciations for nature, nombres, and animaux sections using provided audio files and subsequently reported mix-ups in audio correspondences, requiring a detailed verification and correction. The latest request is to address the Construire des phrases game having propositions only for abimer and needing more variety.
</product_requirements>

<key_technical_concepts>
- Full-stack Development: Expo (React Native), FastAPI, MongoDB.
- Expo Router: File-based routing.
- Database Management: Python scripts for data recovery, deduplication, content updates, and a custom database protection system. Schema restructuring for dual audio.
- Audio Playback:  with custom authentic audio systems.
- API Interaction: Frontend-backend communication, including integrated audio serving API.
- File Handling: Downloading and extracting ZIP files for audio assets.
- Data Validation: Custom Python scripts for verifying audio-to-word mappings.
</key_technical_concepts>

<code_architecture>
The application follows a standard Expo full-stack architecture.



-   : Core FastAPI backend.
    -   **Importance:** Handles API requests, database interactions, and now serves audio files.
    -   **Changes:**
        -   Updated  Pydantic model to include , , , .
        -   Added new endpoints: , ,  to serve language-specific audio files.
        -   Modified  endpoint to provide dual-language audio status and detect categories automatically.
-   : Script to update database schema.
    -   **Importance:** Crucial for implementing dual-language audio by adding new audio fields to existing word entries.
    -   **Changes:** Created and executed to add , , ,  fields to  collection documents.
-   : Script to extend dual audio to new categories.
    -   **Importance:** Automates the integration of new audio files for nature, nombres, and animaux into the database.
    -   **Changes:** Created and executed to process and update database entries for the newly added categories with their respective audio files.
-   : Script to check audio mappings.
    -   **Importance:** Identifies discrepancies between word orthography and audio filenames, crucial for ensuring correct pronunciations.
    -   **Changes:** Created and executed to generate reports on audio mapping errors.
-   : Script for fixing specific audio mappings.
    -   **Importance:** Corrects identified mapping errors, particularly in the famille category.
    -   **Changes:** Created and executed to resolve specific orthographic mismatches and potential duplicate entries.
-   , : Scripts for refining audio mapping corrections.
    -   **Importance:** Handle minor orthographic variations and ensure all audio mappings are validated.
    -   **Changes:** Created and executed to fine-tune validation criteria and mark acceptable variations.
-   : Learning screen for vocabulary.
    -   **Importance:** Displays words and triggers audio playback.
    -   **Changes:**
        -   Updated  interface to match new dual-language audio fields.
        -   Modified  and related functions to use the new .
        -   Updated UI logic for audio icons to reflect dual-language audio availability.
-   : Games screen, including Construire des phrases.
    -   **Importance:** Contains the game logic for Construire des phrases.
    -   **Changes:** No direct changes to this file in the trajectory, but it is currently under investigation for its content generation mechanism.
-   : New frontend audio utility.
    -   **Importance:** Replaces previous audio systems, specifically designed to handle and play dual-language authentic audio from the new backend endpoints.
    -   **Changes:** Created to implement the logic for playing Shimaoré and Kibouchi audio based on availability and category.
-   : Directory for storing authentic audio files.
    -   **Importance:** Stores the  audio files.
    -   **Changes:** New subdirectories  and  were created, and  and  were populated with extracted audio files.
</code_architecture>

<pending_tasks>
- Implement frontend UI for audio playback in games other than Commencer à apprendre.
- Develop and integrate a personal word mastery system.
- Extend the variety of French sentences in the Construire des phrases game.
- Conduct comprehensive frontend mobile UI testing on Expo Go for all implemented features.
- Investigate and resolve remaining incorrect emoji associations.
- Identify the root cause of the recurring database duplication problem (2316 words).
- Resolve the issue of the text-to-speech voice remaining female despite attempts to force a male voice.
- Clarify the user's mentioned fork date (October 19, 2025).
- Extend audio integration (metadata + files) to other categories (e.g., colors).
</pending_tasks>

<current_work>
Immediately prior to this summary, the AI engineer was addressing a user-reported issue with the Construire des phrases game on the  screen. The user observed that the game currently only offers propositions related to the verb abimer and requested more variety. The AI engineer has identified that the game retrieves sentences from a backend endpoint  and noted that this endpoint might be configured to retrieve only a limited number of sentences (currently configured for 5 sentences with a difficulty filter). The current work is to investigate this backend endpoint to understand why the variety is limited and how to extend it.
</current_work>

<optional_next_step>
Investigate the  endpoint in the backend () to understand and modify its logic for sentence retrieval to provide more variety for the Construire des phrases game.
</optional_next_step>

