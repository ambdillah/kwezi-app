<analysis>
The trajectory details the AI engineer's extensive work on the Kwezi language learning app, following a forked task. Initial efforts centered on a meticulous database and file system verification post-fork, revealing a critical issue with missing audios for newly added verbs and the database being in an unexpected name (). This was resolved, confirming 615 words were intact. Subsequent user requests led to iterative updates: adding new verbs, expressions, and traditions, including their authentic audios. Critical audio playback issues were diagnosed and fixed, stemming from inconsistent directory naming ( vs ) and an incomplete Pydantic  model in  lacking new audio filename fields and not correctly returning . The engineer also disabled problematic Shimaoré TTS in the construire des phrases game and corrected specific audio attribution errors. The latter half focused on implementing the freemium monetization model, involving a new  screen, a paywall in , and completing Stripe webhooks. Finally, the AI engineer addressed user queries on PayPal integration (managed by Stripe) and EU compliance, concluding with the generation of legal documents (, , and ) based on user-provided information. The task ends mid-creation of these legal documents.
</analysis>

<product_requirements>
The Kwezi application is an educational platform for Shimaoré and Kibouchi. Its core mission is to provide an authentic and comprehensive language learning experience.
**Core Requirements:**
1.  **Audio Authenticity:** Provide 100% authentic, user-recorded audio for all vocabulary and expressions. Synthetic TTS is a fallback.
2.  **Data Integrity:** Maintain accurate, grammatically correct, and alphabetized vocabulary, expressions, and quiz data, aligned with user-provided rules and translations.
3.  **User Experience:** Ensure a performant (e.g., paginated loading), intuitive application with a consistent female synthetic voice for system-generated sentences.
4.  **Monetization (Freemium Model):** Offer a premium subscription (€2.90/month) to unlock all content (currently 626+ words) and features, limiting free users to 250 words. A Boutique allows purchasing PDF exercise sheets, free for premium users.
**Implementation Done So Far:**
-   Refactored TTS for consistent French female voice, resolving a Shimaoré reading bug.
-   Fixed numerous data integrity issues, including quiz answers and translations.
-   Ensured authentic audio coverage for many categories, including iterative updates for 'verbes', 'expressions', and 'traditions'.
-   Implemented paginated loading for the Commencer à apprendre screen.
-   Developed backend for freemium model and frontend .
-   Implemented Boutique with freemium logic.
-   Corrected and implemented detailed Shimaoré/Kibouchi conjugation rules.
-   Generated comprehensive vocabulary verification documents.
-   Implemented a word search feature in .
-   Integrated Stripe payment gateway on the backend.
-   Implemented frontend  screen and paywall logic in  with a 250-word limit.
-   Integrated Stripe webhooks for subscription lifecycle management.
-   Added subscription management via Stripe Customer Portal.
-   Addressed PayPal payment method support (natively via Stripe, requiring dashboard configuration).
-   Commenced creation of legal documents: , .
</product_requirements>

<key_technical_concepts>
-   **Full-Stack Architecture:** FastAPI (Python) backend, MongoDB, Expo (React Native) frontend.
-   **Data ETL & Automation:** Python scripts () for database updates, audio copying, data verification, and error correction.
-   **Dual Audio System:** Custom frontend () and backend () logic for handling varied audio filename conventions and physical storage paths.
-   **Speech Synthesis:**  and  for consistent French female TTS.
-   **Payment Gateway:** Stripe for subscription, product management, and handling webhooks (backend integrated), and customer portal for subscription management.
-   **Data Modeling:** Pydantic models in FastAPI for request/response validation and database interaction.
</key_technical_concepts>

<code_architecture>

-   ****
    -   **Importance:** Contains environment variables for backend, including MongoDB connection and Stripe keys.
    -   **Summary of Changes:** Verified  and  are configured correctly.
-   ****
    -   **Importance:** Main FastAPI server, serving API endpoints.
    -   **Summary of Changes:**
        -    was corrected to search for audio files in  (with 's') instead of  (without 's') for the tradition category, aligning with actual file placement.
        -   The  Pydantic model was updated to include new audio filename fields (, ) alongside the legacy ones, ensuring correct serialization of word data including  as uid=0(root) gid=0(root) groups=0(root).
        -    endpoint implicitly improved by  model update.
-   ****
    -   **Importance:** FastAPI routes for Stripe integration, handling checkout and webhooks.
    -   **Summary of Changes:** Expanded to include comprehensive webhook event handling (, , ) for managing user premium status in the MongoDB database, including functionality to create Stripe customer portal sessions.
-   ** (New File)**
    -   **Importance:** Script for securely adding new verbs and their associated audio files to MongoDB and the filesystem.
    -   **Summary of Changes:** Created and executed to add 4 new verbs and 8 audio files to the database and .
-   ** (New File)**
    -   **Importance:** Script for securely adding new expressions and their associated audio files.
    -   **Summary of Changes:** Created and executed to add 3 new expressions and 4 audio files to the database and .
-   ** (New File)**
    -   **Importance:** Script for securely adding new tradition entries and their associated audio files.
    -   **Summary of Changes:** Created and executed to add 8 new traditions and 13 audio files to the database and .
-   ** (New File)**
    -   **Importance:** Script to correct specific audio filename attributions in the database.
    -   **Summary of Changes:** Created and executed to correct audio links for Ail, Ciboulette, and Mangue in the database.
-   ****
    -   **Importance:** Main learning screen, displaying words and categories.
    -   **Summary of Changes:**
        -   The  interface was implicitly updated (via backend changes) to handle both old and new audio filename fields.
        -   Implemented paywall logic: imports , limits displayed words to 250 for non-premium users.
        -   A  component was added to the UI, appearing when the word limit is reached, prompting users to upgrade.
-   ****
    -   **Importance:** Contains the logic for various language learning games.
    -   **Summary of Changes:** The automatic Text-to-Speech playback for Shimaoré sentences after validation in the construire des phrases game was commented out to prevent mispronunciations.
-   ** (New File)**
    -   **Importance:** Dedicated screen for managing premium subscriptions.
    -   **Summary of Changes:** Created to display premium features, an upgrade button, and a Manage Subscription button that redirects to the Stripe Customer Portal.
-   ** (New File)**
    -   **Importance:** Legal document for data privacy.
    -   **Summary of Changes:** Created based on user-provided information.
-   ** (New File)**
    -   **Importance:** Legal document outlining terms and conditions for purchases.
    -   **Summary of Changes:** Created based on user-provided information.
-   ****
    -   **Importance:** Manages global user state and authentication.
    -   **Summary of Changes:** The  interface was updated to include  to link users with their Stripe customer records.
-   ****
    -   **Importance:** Handles playing authentic audio files.
    -   **Summary of Changes:** Refactored for robustly checking and prioritizing both new and old audio filename conventions in word objects, fixing issues where authentic audios were not playing.
-   ** (New Directory)**
    -   **Importance:** Centralized location for tradition audio files.
    -   **Summary of Changes:** Files from  were copied into this directory to resolve a backend path mismatch.

</code_architecture>

<pending_tasks>
-   Complete the creation of legal documents, specifically .
-   Perform comprehensive end-to-end testing of the newly implemented monetization flow, including premium content access, Stripe checkout, webhook processing, and subscription management.
</pending_tasks>

<current_work>
Immediately before this summary request, the AI engineer was actively working on generating legal documents for the application based on detailed information provided by the user. Specifically, the  and  files had been successfully created and populated with the necessary legal text tailored to the user's business and operational details. The last action recorded was the initiation of the creation for the  document. This task is crucial for the application's legal compliance, especially with European standards like GDPR and SCA, as previously discussed. The completion of these documents will finalize a significant part of the application's overall completeness from a legal and user trust perspective, complementing the recently finished monetization features.
</current_work>

<optional_next_step>
Complete the creation of the  document ().
</optional_next_step>
